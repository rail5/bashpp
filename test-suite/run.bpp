#!/usr/bin/env bpp

@include_once "detect-tty.bpp"
@include_once "TestStats.bpp"
@include_once "Test.bpp"
@include_once "TestRunner.bpp"

@TestRunner runner

# Hello, world
@runner.addTest "Hello, World" "test-suite/tests/helloworld.bpp" "Hello, World!
Hello, test!
"

# Object references
@runner.addTest "Object References #1" "test-suite/tests/object-references-1.bpp" "Outer Instance
Inner Instance
DeeperInner Instance
DeepestInner Instance
"

@runner.addTest "Object References #2" "test-suite/tests/object-references-2.bpp" "default value
echo hello
new value
hello
echo hello again
hello again
"

# Supershells
@runner.addTest "Supershells #1" "test-suite/tests/supershells.bpp" "Command matches expected output
Iteration 1
Iteration 2
Iteration 3
Iteration 4
Iteration 5
Iteration 6
Iteration 7
Iteration 8
Iteration 9
Iteration 10
hi
"

@runner.addTest "Supershells #2" "test-suite/tests/supershells-2.bpp" "hi
default value
"

# Subshells
@runner.addTest "Subshells #1" "test-suite/tests/subshells.bpp" "hi
hi
default value
new value
new value
"

@runner.addTest "Subshells #2" "test-suite/tests/subshells-2.bpp" ".+
error:.+
.*
.*
"

# Queue example
@runner.addTest "Queue Example" "test-suite/tests/queue.bpp" "a
b
c
"

# toPrimitive
@runner.addTest "toPrimitive" "test-suite/tests/toprimitive.bpp" "Object Instance
Test Object #2
"

# Constructors and Destructors
@runner.addTest "Constructors and Destructors" "test-suite/tests/constructors-and-destructors.bpp" "Constructor called: John Q\\. Public
Constructor called: John Q\\. Public
Destructing John Q\\. Public
Constructor called: John Q\\. Public
Destructing John Q\\. Public
"

# Includes
@runner.addTest "Includes" "test-suite/tests/include.bpp" "Included file
Including file
"

# Pointers
@runner.addTest "Pointers" "test-suite/tests/pointers.bpp" "default value for primitive data member
.*0__data: invalid variable name
new value for object number 3
new value for object number 3
default value for primitive data member
default value for primitive data member
"

@runner.addTest "Pointer Arguments" "test-suite/tests/pointer-arguments.bpp" "Hello from myMethodWithObject
Object data member: default value
"

@runner.addTest "Pointer Dereferencing" "test-suite/tests/pointer-dereferencing.bpp" "bpp__MyClass__[0-9]+
MyClass Instance
default value
default value
Displaying default value
Displaying default value
Displaying default value
Displaying default value
.+line [0-9]+: bpp__MyClass__[0-9]+: command not found
MyClass Instance
hello
hello
bpp__MyClass__[0-9]+
default value
default value
bpp__[0-9]+__ContainingClass__containingObject
ContainingClass Instance
bpp__MyClass__[0-9]+
MyClass Instance
default value
default value
Displaying default value
Displaying default value
Displaying default value
Displaying default value
.+line [0-9]+: bpp__MyClass__[0-9]+: command not found
MyClass Instance
.+line [0-9]+: bpp__[0-9]+__ContainingClass__containingObject: command not found
ContainingClass Instance
hello again
hello again
hello
hello
bpp__[0-9]+__ContainingClass__containingObject
echo hello again
echo hello again
new value
default value
new value
default value
"

# Inheritance
@runner.addTest "Inheritance" "test-suite/tests/inheritance.bpp" "You extend your hand to pet it, but the 60cm, 30kg beast bares its teeth
You pet the dog
You are devoured by the lion
\\.\\.\\.Why did you try to pet a 200kg lion\\?
You are devoured by the lion
\\.\\.\\.Why did you try to pet a 200kg lion\\?
"

# Vtables
@runner.addTest "Vtables" "test-suite/tests/vtables.bpp" "Base class
Derived class
Base class
Derived class
0
bpp__.+
bpp__.+
bpp__.+
bpp__.+
bpp__.+
0
"

# Arrays as Data Members
@runner.addTest "Arrays as Data Members #1" "test-suite/tests/arrays-as-datamembers-1.bpp" "hello
hello
hello
hello
1
world
world
world
world
2
hello
hello
hello
hello
world
world
world
world
!
!
!
!
a
a
a
a
b
b
b
b
c
c
c
c
d
d
d
d
"

@runner.addTest "Arrays as Data Members #2" "test-suite/tests/arrays-as-datamembers-2.bpp" "hello
hello
hello
hello
1
world
world
world
world
2
hello
hello
hello
hello
world
world
world
world
!
!
!
!
a
a
a
a
b
b
b
b
c
c
c
c
d
d
d
d
"

@runner.addTest "Arrays as Data Members #3" "test-suite/tests/arrays-as-datamembers-3.bpp" "hello
hello
hello
hello
hello
hello
hello
hello
world
world
world
world
!
!
!
!
"

@runner.addTest "Case statements" "test-suite/tests/case.bpp" "default
case1
case2
otherMember is case4
case3
case4
"

@runner.addTest "If...Elif statements" "test-suite/tests/if-elif.bpp" "default
case1
case2
case3
\@this\\.member is case1
\@this\\.othermember is case1
\@this\\.anothermember is case1
default
"

@runner.addTest "Heredocs" "test-suite/tests/heredocs.bpp" "abc
def
value
hij
abc
def
value
hij
"

@runner.addTest "Herestrings" "test-suite/tests/herestrings.bpp" "abc def value hij
"

@runner.addTest "Multiline commands" "test-suite/tests/multiline-commands.bpp" "one two three four five six value hello seven eight nine
"

@runner.addTest "Stray Terminals" "test-suite/tests/stray-terminals.bpp" "abc]}{}{{}} if elif then else fi ;; 
"

@runner.addTest "Connectives" "test-suite/tests/connectives.bpp" "abc
String && def \|\| def \| def && more string
"

@runner.addTest "Exit Codes" "test-suite/tests/exit-codes.bpp" "0
1
2
3
4
8
16
32
64
128
255
0
"

@runner.addTest "Duplicate object names" "test-suite/tests/duplicate-object-names.bpp" "new value 1
new value 2
new value 1
new value 3
new value 4
new value 3
"

@runner.addTest "Address of method #1" "test-suite/tests/address-of-method-1.bpp" "Hello, World!
"

@runner.addTest "Address of method #2" "test-suite/tests/address-of-method-2.bpp" "Hello, World!
"

@runner.addTest "Address of method #3" "test-suite/tests/address-of-method-3.bpp" "Hello, World!
Hello, World!
"

@runner.addTest "Address of method #4" "test-suite/tests/address-of-method-4.bpp" "Hello, World!
"

@runner.addTest "Address of method #5" "test-suite/tests/address-of-method-5.bpp" "Hello, World!
"

@runner.addTest "Arithmetic for loops" "test-suite/tests/arithmetic-for-loops.bpp" "01234
56789
"

@runner.addTest "Number ranges" "test-suite/tests/number-ranges.bpp" "12345
1 3 5 7 9
"

@runner.addTest "Nonprimitive copies" "test-suite/tests/nonprimitive-copies.bpp" "new value
pointer value
"

@runner.addTest "Basic Recursion" "test-suite/tests/basic-recursion.bpp" "4
3
2
1
0
"

@runner.addTest "Function Isolation" "test-suite/tests/function-isolation.bpp" "default value
new value
default value
"

@runner.addTest "Scope Checking" "test-suite/tests/scope.bpp" ".+
error: var is inaccessible in this context
.+
.+
.+
error: var is inaccessible in this context
.+
.+
.+
error: var2 is inaccessible in this context
.+
.+
.+
error: var is inaccessible in this context
.+
.+
.+
error: var2 is inaccessible in this context
.+
.+
"

# Standard Library tests
@runner.addTest "STL Stacks" "test-suite/tests/stdlib-stacks.bpp" "0
3
false
c
c
2
b
a
0
true
3
!
0
true
"

@runner.addTest "STL Queues" "test-suite/tests/stdlib-queues.bpp" "0
3
false
a
c
a
2
b
c
0
true
3
0
true
"

@runner.addTest "STL Shared Stacks" "test-suite/tests/stdlib-sharedstacks.bpp" "0
3
false
c
c
2
b
a
0
true
0
3
false
c
c
2
b
a
0
true
6
false
0
true
a
b
c
d
e
f
6
false
0
true
a
b
c
d
e
f
"

while getopts "lh" opt; do
	case $opt in
		l)
			@runner.listTests
			exit 0
			;;
		h)
			echo "Usage: run.bpp [-l] [test1 test2 ...]"
			echo "If no tests are specified, all tests will be run"
			echo "  -l: List all tests"
			echo "  -h: Display this help message"
			exit 0
			;;
	esac
done

echo "Running tests..."
echo "----------------"

if [[ $# -gt 0 ]]; then
	for testName in "$@"; do
		@runner.runTest "$testName"
	done
else
	@runner.runAllTests
fi

echo "----------------"
echo "@runner.stats.toPrimitive"

if [[ "@runner.stats.getFailCount" -gt 0 ]]; then
	exit 1
fi
