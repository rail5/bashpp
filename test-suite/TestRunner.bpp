@include_once "TestStats.bpp"

@class TestRunner {
	@public @TestStats stats
	@public tests=() # Hack. Array of pointers
					# This will not work once type checking is implemented
					# TODO(@rail5): Add object arrays to Bash++

	@public @method updateStats test {
		@Test* test="$test"
		# TODO(@rail5): I wanted to write this as a 'case' statement,
		# And discovered that 'case' statements are broken
		# (All the pre-code and post-code segments get haphazardly added around the case statement, breaking it)
		# Fix 'case' statements in the compiler.

		if [[ "@test.getStatus" == "pass" ]]; then
			@this.stats.incrementPassedTests
		elif [[ "@test.getStatus" == "fail" ]]; then
			@this.stats.incrementFailedTests
		elif [[ "@test.getStatus" == "untested" ]]; then
			@this.stats.incrementUntestedTests
		fi

		echo @test.toPrimitive
	}

	@public @method addTest name sourceFile expectedOutput {
		@Test* test=@new Test
		@test.setName "$name"
		@test.setSourceFile "$sourceFile"
		@test.setExpectedOutput "$expectedOutput"

		@this.tests+=("@test")
	}

	@public @method runAllTests {
		# Run all the tests
		for i in @(seq 0 $((@{#this.tests[@]} - 1))); do
			@Test* test="@{this.tests[$i]}"
			@test.run
			@this.updateStats "@test"
		done
	}

	@public @method runTest name {
		if [[ -z "$name" ]]; then
			echo "Test name must be provided."
			exit 1
		fi
		for i in @(seq 0 @{#this.tests[@]}); do
			@Test* test="@{this.tests[$i]}"
			if [[ "@test.getName" == "$name" ]]; then
				@test.run
				@this.updateStats "@test"
				return
			fi
		done
		echo "Test not found: $name"
		@this.stats.incrementUntestedTests
	}
}
