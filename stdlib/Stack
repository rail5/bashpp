#!/usr/bin/env bpp
#AUTODOC#

# Copyright (C) 2025 Andrew S. Rightenburg
# GNU General Public License v3.0
# This file is part of the Bash++ Standard Library.

#CLASS Stack
## The Stack class provides a simple stack implementation in Bash++.
@class Stack {
	@protected stack=()

	##METHOD public size
	### Echoes the number of elements in the stack.
	@virtual @public @method size {
		echo "@{#this.stack[@]}"
	}

	##METHOD public push
	### Pushes a value onto the top of the stack.
	###PARAM primitive value
	#### The value to push onto the top of the stack.
	@virtual @public @method push value {
		@this.stack+=("$value")
	}

	##METHOD public pop
	### Pops the top element off the stack and echoes it.
	@virtual @public @method pop {
		if [[ @{#this.stack[@]} -gt 0 ]]; then
			echo "@{this.stack[$((@{#this.stack[@]} - 1))]}"
			unset &@this.stack[$((@{#this.stack[@]} - 1))]
		fi
	}

	##METHOD public top
	### Echoes the top element of the stack.
	@virtual @public @method top {
		if [[ @{#this.stack[@]} -gt 0 ]]; then
			echo "@{this.stack[$((@{#this.stack[@]} - 1))]}"
		fi
	}

	##METHOD public clear
	### Removes all elements from the stack.
	@virtual @public @method clear {
		unset &@this.stack
	}

	##METHOD public empty
	### Echoes "true" if the stack is empty, "false" otherwise.
	@virtual @public @method empty {
		[[ @{#this.stack[@]} -eq 0 ]] && echo "true" || echo "false"
	}
}
#ENDAUTODOC#
