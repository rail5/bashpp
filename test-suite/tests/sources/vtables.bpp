@class Base {
	@virtual @public @method A {
		echo "Base class"
	}

	@public @method B {
		@this.A
	}
}

@class Derived : Base {
	@public @method A {
		echo "Derived class"
	}
}

@Base base_object
@base_object.B # "Base class"

@Derived derived_object
@derived_object.B # "Derived class"

@Derived* from_base_to_derived=&@base_object
@from_base_to_derived.A # "Base class"

@Base* from_derived_to_base=&@derived_object
@from_derived_to_base.A # "Derived class"

@Derived* dyntest1=@dynamic_cast<Derived> &@base_object
echo @dyntest1 # "0" (@nullptr)

@Base* dyntest2=@dynamic_cast<Base> &@derived_object
echo @dyntest2 # Valid pointer

@class FurtherDerived : Derived {
}

@FurtherDerived further_derived_object
@Base* dyntest3=@dynamic_cast<Base> &@further_derived_object
echo @dyntest3 # Valid pointer
@Derived* dyntest4=@dynamic_cast<Derived> &@further_derived_object
echo @dyntest4 # Valid pointer
@Derived* dyntest5=@dynamic_cast<Derived> @dyntest3
echo @dyntest5 # Valid pointer
@FurtherDerived* dyntest6=@dynamic_cast<FurtherDerived> @dyntest3
echo @dyntest6 # Valid pointer

@Base* nonsense=@dynamic_cast<Base> "This string is not a valid pointer."
echo @nonsense # "0" (@nullptr)

shell_var="Base"
@class Object {
	@public member="Derived"
}
@Object o

@Base* cast_using_shell_var=@dynamic_cast<$shell_var> &@derived_object
echo @cast_using_shell_var # Valid pointer
@Derived* cast_using_object_ref=@dynamic_cast<@o.member> &@derived_object
echo @cast_using_object_ref # Valid pointer

shell_var="Nonsense"
@o.member="Nonsense"
@Base* cast_using_invalid_shell_var=@dynamic_cast<$shell_var> &@derived_object
echo @cast_using_invalid_shell_var # "0" (@nullptr)
@Derived* cast_using_invalid_object_ref=@dynamic_cast<@o.member> &@derived_object
echo @cast_using_invalid_object_ref # "0" (@nullptr)
