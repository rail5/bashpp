#!/usr/bin/env bpp
#AUTODOC#

# Copyright (C) 2025 Andrew S. Rightenburg
# GNU General Public License v3.0
# This file is part of the Bash++ Standard Library.

@include_once "SharedQueue"

#CLASS TypedSharedQueue : SharedQueue
## The TypedSharedQueue class provides a shared queue implementation which enforces type restrictions on its elements.
## After setting the queue's type, all elements must be pointers to objects of that type or its subclasses.
## 
## Reads and writes are atomic and concurrency-safe.
## 
## The queue can be encrypted for security.
@class TypedSharedQueue : SharedQueue {
	@protected type=""

	##METHOD public set_type
	### Sets the type of elements that this shared queue will hold.
	### This method must be called before adding elements to the queue.
	### The queue's type cannot be changed after elements have been added.
	###PARAM primitive type
	#### The type to enforce for the elements of this shared queue.
	@virtual @public @method set_type type {
		if [[ @this.used -ne 0 ]]; then
			>&2 echo "Error: TypedSharedQueue: Cannot change type after the queue has been used."
			return 1
		fi
		@this.type="$type"
	}

	@protected @method _check_type value {
		local check=@dynamic_cast<@this.type> "$value"
		if [[ "$check" == @nullptr ]]; then
			>&2 echo "Error: TypedSharedQueue: Value '$value' is not of type '@this.type'."
			return 1
		fi
		return 0
	}

	##METHOD public enqueue
	### Adds a value to the end of the shared queue, enforcing the specified type.
	###PARAM primitive value
	#### The value to add to the shared queue.
	@public @method enqueue value {
		if @this._check_type "$value"; then
			@super.enqueue "$value"
		else
			return 1
		fi
	}
}
